"""Initial migration.

Revision ID: deb61e55c38e
Revises:
Create Date: 2020-04-11 20:30:30.641146

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'deb61e55c38e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ethereum_block',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('block_height', sa.Integer(), nullable=True),
    sa.Column('mined_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ethereum_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('args', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('event', sa.String(length=128), nullable=True),
    sa.Column('logIndex', sa.Integer(), nullable=True),
    sa.Column('transactionIndex', sa.Integer(), nullable=True),
    sa.Column('transactionHash', sa.String(length=68), nullable=True),
    sa.Column('address', sa.String(length=68), nullable=True),
    sa.Column('blockHash', sa.String(length=68), nullable=True),
    sa.Column('blockNumber', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('approval',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner', sa.String(length=64), nullable=True),
    sa.Column('spender', sa.String(length=64), nullable=True),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_requested',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.String(length=64), nullable=True),
    sa.Column('query', sa.String(length=512), nullable=True),
    sa.Column('querySymbol', sa.String(length=32), nullable=True),
    sa.Column('granularity', sa.Numeric(), nullable=True),
    sa.Column('requestId', sa.Numeric(), nullable=True),
    sa.Column('totalTips', sa.Numeric(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dispute_vote_tallied',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('disputeID', sa.Numeric(), nullable=True),
    sa.Column('result', sa.Numeric(), nullable=True),
    sa.Column('reportedMiner', sa.String(length=64), nullable=True),
    sa.Column('reportingParty', sa.String(length=64), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('new_challenge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('currentChallenge', sa.LargeBinary(), nullable=True),
    sa.Column('currentRequestId', sa.Numeric(), nullable=True),
    sa.Column('difficulty', sa.Numeric(), nullable=True),
    sa.Column('multiplier', sa.Numeric(), nullable=True),
    sa.Column('query', sa.String(length=512), nullable=True),
    sa.Column('totalTips', sa.Numeric(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('new_dispute',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('disputeId', sa.Numeric(), nullable=True),
    sa.Column('requestId', sa.Numeric(), nullable=True),
    sa.Column('timestamp', sa.Numeric(), nullable=True),
    sa.Column('miner', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('new_request_on_deck',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('requestId', sa.Numeric(), nullable=True),
    sa.Column('query', sa.String(length=512), nullable=True),
    sa.Column('onDeckQueryHash', sa.LargeBinary(), nullable=True),
    sa.Column('onDeckTotalTips', sa.Numeric(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('new_stake',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('new_tellor_address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('newTellor', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('new_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('requestId', sa.Numeric(), nullable=True),
    sa.Column('time', sa.Numeric(), nullable=True),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.Column('totalTips', sa.Numeric(), nullable=True),
    sa.Column('currentChallenge', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nonce_submitted',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('miner', sa.String(length=64), nullable=True),
    sa.Column('nonce', sa.String(length=128), nullable=True),
    sa.Column('requestId', sa.Numeric(), nullable=True),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.Column('currentChallenge', sa.LargeBinary(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ownership_proposed',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('previousOwner', sa.String(length=64), nullable=True),
    sa.Column('newOwner', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ownership_transferred',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('previousOwner', sa.String(length=64), nullable=True),
    sa.Column('newOwner', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stake_withdrawn',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stake_withdraw_requested',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tip_added',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.String(length=64), nullable=True),
    sa.Column('requestId', sa.Numeric(), nullable=True),
    sa.Column('tip', sa.Numeric(), nullable=True),
    sa.Column('totalTips', sa.Numeric(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transfer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fromAddress', sa.String(length=64), nullable=True),
    sa.Column('to', sa.String(length=64), nullable=True),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('voted',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('disputeID', sa.Numeric(), nullable=True),
    sa.Column('position', sa.Boolean(), nullable=True),
    sa.Column('voter', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ethereum_event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ethereum_event_id'], ['ethereum_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('voted')
    op.drop_table('transfer')
    op.drop_table('tip_added')
    op.drop_table('stake_withdraw_requested')
    op.drop_table('stake_withdrawn')
    op.drop_table('ownership_transferred')
    op.drop_table('ownership_proposed')
    op.drop_table('nonce_submitted')
    op.drop_table('new_value')
    op.drop_table('new_tellor_address')
    op.drop_table('new_stake')
    op.drop_table('new_request_on_deck')
    op.drop_table('new_dispute')
    op.drop_table('new_challenge')
    op.drop_table('dispute_vote_tallied')
    op.drop_table('data_requested')
    op.drop_table('approval')
    op.drop_table('ethereum_event')
    op.drop_table('ethereum_block')
    # ### end Alembic commands ###
